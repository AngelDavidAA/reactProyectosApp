{"version":3,"sources":["logo.svg","listaEjercicios.js","temperatura.js","App2.js","reportWebVitals.js","index.js"],"names":["Ejercicios","props","className","src","logo","alt","children","BoilingVeredict","celsius","fahrenheit","toCelcius","toFahrenheit","celcius","tryConvert","temperature","convert","input","parseFloat","Number","isNaN","output","Math","round","toString","scaleNames","c","f","TemperatureInput","handleChange","bind","e","this","onTemperatureChange","target","value","temperatura","scale","onChange","React","Component","Calculator","state","handleCelciusChange","handleFahrenheitChange","setState","App2","to","path","element","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.857d26eb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\r\nimport { React } from \"react\";\r\nimport './index.css';    \r\nimport './App.css';\r\nimport logo from './logo.svg';\r\n\r\nfunction Ejercicios(props) {\r\n    return(\r\n            <header className=\"App-header\">\r\n            <p>\r\n              Navega por el sitio y mira los proyectos de prueba de REACT.\r\n            </p>\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n            {props.children}\r\n            </header>\r\n        );\r\n}\r\nexport default Ejercicios;  ","import React from 'react';\r\n\r\nfunction BoilingVeredict (props){\r\n   if(props.celsius >= 100 || props.fahrenheit >=212){\r\n     return  <p>The Water in {props.celsius} 째C  and {props.fahrenheit} 째F would boil! :P</p>\r\n   }\r\n    return <p>The Water would not boil :L</p>\r\n}\r\n\r\nfunction toCelcius(fahrenheit){\r\n    return (fahrenheit-32) * 5/9;\r\n}\r\nfunction toFahrenheit (celcius){\r\n    return (celcius * 9/5) + 32;\r\n}\r\nfunction tryConvert(temperature, convert){\r\n    const input = parseFloat(temperature);\r\n    if(Number.isNaN(input)){\r\n        return '';\r\n    }\r\n    const output= convert(input);\r\n    const rounded = Math.round(output * 1000) / 1000;\r\n    return rounded.toString();\r\n}\r\n\r\n\r\n\r\nconst scaleNames = {\r\n    c: 'Celsius',\r\n    f: 'Fahrenheit'\r\n}\r\n\r\nclass TemperatureInput extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(e){\r\n       this.props.onTemperatureChange(e.target.value);\r\n    }\r\n\r\n    render(){\r\n        const temperatura = this.props.temperature;\r\n        const scale = this.props.scale;\r\n        return(\r\n            <fieldset>\r\n                <legend>Enter temperature in {scaleNames[scale]} </legend>\r\n                <input value={temperatura} onChange = {this.handleChange}/>\r\n            </fieldset>\r\n        );\r\n    }\r\n}\r\n\r\nclass Calculator extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            temperature : '',\r\n            scale : 'c'\r\n        }\r\n        this.handleCelciusChange = \r\n            this.handleCelciusChange.bind(this);\r\n        this.handleFahrenheitChange = \r\n            this.handleFahrenheitChange.bind(this);\r\n    }\r\n\r\n    handleCelciusChange(temperature){\r\n        this.setState({scale: 'c', temperature});\r\n    }\r\n    handleFahrenheitChange(temperature){\r\n        this.setState({scale: 'f', temperature});\r\n    }\r\n\r\n   render(){\r\n       const scale  = this.state.scale;\r\n       const temperature = this.state.temperature;\r\n       const celsius = scale === 'f' ? \r\n                        tryConvert (temperature, toCelcius):\r\n                        temperature;\r\n        const fahrenheit = scale === 'c' ? \r\n                        tryConvert(temperature, toFahrenheit):\r\n                        temperature;\r\n\r\n       return(\r\n           <div>\r\n               <TemperatureInput \r\n                    scale =\"c\"\r\n                    temperature={celsius}\r\n                    onTemperatureChange = {this.handleCelciusChange}/>\r\n               <TemperatureInput\r\n                     scale =\"f\"\r\n                     temperature = {fahrenheit}\r\n                     onTemperatureChange = {this.handleFahrenheitChange}/>\r\n                <BoilingVeredict celsius = {parseFloat(celsius)} fahrenheit = {parseFloat(fahrenheit)}/>\r\n           </div>\r\n       );\r\n   }\r\n}\r\n\r\nexport default Calculator;\r\n\r\n","import Ejercicios from './listaEjercicios';\r\nimport Calculator from './temperatura'\r\nimport { \r\n  BrowserRouter as Router ,\r\n  Routes,\r\n  Route,\r\n  Link,\r\n  NavLink\r\n} from 'react-router-dom';\r\n\r\n\r\n\r\nfunction App2() {\r\n  return (\r\n    <Router>\r\n      <div className=\"Container\">\r\n       <div className=\"App\">   \r\n        \r\n        <div className=\"container\">\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <div className=\"container-fluid\">\r\n                    <NavLink to=\"/\" className=\"navbar-brand\">Inicio</NavLink>\r\n                </div>\r\n            </nav>\r\n        </div>   \r\n        \r\n        <Routes>\r\n                <Route path=\"/temperatura\" element={<Calculator/> } ></Route>\r\n                <Route path=\"/\" exact element={\r\n                    <Ejercicios>  \r\n                        <NavLink to=\"/temperatura\"  className=\"btn btn-dark\"> Temp 째C - 째K</NavLink>\r\n                    </Ejercicios>}\r\n                >\r\n                </Route>\r\n        </Routes>\r\n       </div>\r\n    </div>\r\n    </Router>    \r\n  );\r\n}\r\nexport default App2;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App2 from './App2';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App2 />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}